/*
 * Generated by gdbus-codegen 2.40.0. DO NOT EDIT.
 *
 * The license of this code is the same as for the source it was derived from.
 */

#ifndef __DBUS_PROCESS_API_H__
#define __DBUS_PROCESS_API_H__

#include <gio/gio.h>

G_BEGIN_DECLS


/* ------------------------------------------------------------------------ */
/* Declarations for com.mixtelematics.ContextManager */

#define GENERATED_TYPE_COM_MIXTELEMATICS_CONTEXT_MANAGER (generated_com_mixtelematics_context_manager_get_type ())
#define GENERATED_COM_MIXTELEMATICS_CONTEXT_MANAGER(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), GENERATED_TYPE_COM_MIXTELEMATICS_CONTEXT_MANAGER, generatedComMixtelematicsContextManager))
#define GENERATED_IS_COM_MIXTELEMATICS_CONTEXT_MANAGER(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), GENERATED_TYPE_COM_MIXTELEMATICS_CONTEXT_MANAGER))
#define GENERATED_COM_MIXTELEMATICS_CONTEXT_MANAGER_GET_IFACE(o) (G_TYPE_INSTANCE_GET_INTERFACE ((o), GENERATED_TYPE_COM_MIXTELEMATICS_CONTEXT_MANAGER, generatedComMixtelematicsContextManagerIface))

struct _generatedComMixtelematicsContextManager;
typedef struct _generatedComMixtelematicsContextManager generatedComMixtelematicsContextManager;
typedef struct _generatedComMixtelematicsContextManagerIface generatedComMixtelematicsContextManagerIface;

struct _generatedComMixtelematicsContextManagerIface
{
  GTypeInterface parent_iface;

  gboolean (*handle_get_context) (
    generatedComMixtelematicsContextManager *object,
    GDBusMethodInvocation *invocation,
    gint arg_mcc,
    gint arg_mnc,
    gint arg_spn);

};

GType generated_com_mixtelematics_context_manager_get_type (void) G_GNUC_CONST;

GDBusInterfaceInfo *generated_com_mixtelematics_context_manager_interface_info (void);
guint generated_com_mixtelematics_context_manager_override_properties (GObjectClass *klass, guint property_id_begin);


/* D-Bus method call completion functions: */
void generated_com_mixtelematics_context_manager_complete_get_context (
    generatedComMixtelematicsContextManager *object,
    GDBusMethodInvocation *invocation,
    gint num,
    GVariant *contexts);



/* D-Bus method calls: */
void generated_com_mixtelematics_context_manager_call_get_context (
    generatedComMixtelematicsContextManager *proxy,
    gint arg_mcc,
    gint arg_mnc,
    gint arg_spn,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean generated_com_mixtelematics_context_manager_call_get_context_finish (
    generatedComMixtelematicsContextManager *proxy,
    gint *out_num,
    GVariant **out_contexts,
    GAsyncResult *res,
    GError **error);

gboolean generated_com_mixtelematics_context_manager_call_get_context_sync (
    generatedComMixtelematicsContextManager *proxy,
    gint arg_mcc,
    gint arg_mnc,
    gint arg_spn,
    gint *out_num,
    GVariant **out_contexts,
    GCancellable *cancellable,
    GError **error);



/* ---- */

#define GENERATED_TYPE_COM_MIXTELEMATICS_CONTEXT_MANAGER_PROXY (generated_com_mixtelematics_context_manager_proxy_get_type ())
#define GENERATED_COM_MIXTELEMATICS_CONTEXT_MANAGER_PROXY(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), GENERATED_TYPE_COM_MIXTELEMATICS_CONTEXT_MANAGER_PROXY, generatedComMixtelematicsContextManagerProxy))
#define GENERATED_COM_MIXTELEMATICS_CONTEXT_MANAGER_PROXY_CLASS(k) (G_TYPE_CHECK_CLASS_CAST ((k), GENERATED_TYPE_COM_MIXTELEMATICS_CONTEXT_MANAGER_PROXY, generatedComMixtelematicsContextManagerProxyClass))
#define GENERATED_COM_MIXTELEMATICS_CONTEXT_MANAGER_PROXY_GET_CLASS(o) (G_TYPE_INSTANCE_GET_CLASS ((o), GENERATED_TYPE_COM_MIXTELEMATICS_CONTEXT_MANAGER_PROXY, generatedComMixtelematicsContextManagerProxyClass))
#define GENERATED_IS_COM_MIXTELEMATICS_CONTEXT_MANAGER_PROXY(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), GENERATED_TYPE_COM_MIXTELEMATICS_CONTEXT_MANAGER_PROXY))
#define GENERATED_IS_COM_MIXTELEMATICS_CONTEXT_MANAGER_PROXY_CLASS(k) (G_TYPE_CHECK_CLASS_TYPE ((k), GENERATED_TYPE_COM_MIXTELEMATICS_CONTEXT_MANAGER_PROXY))

typedef struct _generatedComMixtelematicsContextManagerProxy generatedComMixtelematicsContextManagerProxy;
typedef struct _generatedComMixtelematicsContextManagerProxyClass generatedComMixtelematicsContextManagerProxyClass;
typedef struct _generatedComMixtelematicsContextManagerProxyPrivate generatedComMixtelematicsContextManagerProxyPrivate;

struct _generatedComMixtelematicsContextManagerProxy
{
  /*< private >*/
  GDBusProxy parent_instance;
  generatedComMixtelematicsContextManagerProxyPrivate *priv;
};

struct _generatedComMixtelematicsContextManagerProxyClass
{
  GDBusProxyClass parent_class;
};

GType generated_com_mixtelematics_context_manager_proxy_get_type (void) G_GNUC_CONST;

void generated_com_mixtelematics_context_manager_proxy_new (
    GDBusConnection     *connection,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GAsyncReadyCallback  callback,
    gpointer             user_data);
generatedComMixtelematicsContextManager *generated_com_mixtelematics_context_manager_proxy_new_finish (
    GAsyncResult        *res,
    GError             **error);
generatedComMixtelematicsContextManager *generated_com_mixtelematics_context_manager_proxy_new_sync (
    GDBusConnection     *connection,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GError             **error);

void generated_com_mixtelematics_context_manager_proxy_new_for_bus (
    GBusType             bus_type,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GAsyncReadyCallback  callback,
    gpointer             user_data);
generatedComMixtelematicsContextManager *generated_com_mixtelematics_context_manager_proxy_new_for_bus_finish (
    GAsyncResult        *res,
    GError             **error);
generatedComMixtelematicsContextManager *generated_com_mixtelematics_context_manager_proxy_new_for_bus_sync (
    GBusType             bus_type,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GError             **error);


/* ---- */

#define GENERATED_TYPE_COM_MIXTELEMATICS_CONTEXT_MANAGER_SKELETON (generated_com_mixtelematics_context_manager_skeleton_get_type ())
#define GENERATED_COM_MIXTELEMATICS_CONTEXT_MANAGER_SKELETON(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), GENERATED_TYPE_COM_MIXTELEMATICS_CONTEXT_MANAGER_SKELETON, generatedComMixtelematicsContextManagerSkeleton))
#define GENERATED_COM_MIXTELEMATICS_CONTEXT_MANAGER_SKELETON_CLASS(k) (G_TYPE_CHECK_CLASS_CAST ((k), GENERATED_TYPE_COM_MIXTELEMATICS_CONTEXT_MANAGER_SKELETON, generatedComMixtelematicsContextManagerSkeletonClass))
#define GENERATED_COM_MIXTELEMATICS_CONTEXT_MANAGER_SKELETON_GET_CLASS(o) (G_TYPE_INSTANCE_GET_CLASS ((o), GENERATED_TYPE_COM_MIXTELEMATICS_CONTEXT_MANAGER_SKELETON, generatedComMixtelematicsContextManagerSkeletonClass))
#define GENERATED_IS_COM_MIXTELEMATICS_CONTEXT_MANAGER_SKELETON(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), GENERATED_TYPE_COM_MIXTELEMATICS_CONTEXT_MANAGER_SKELETON))
#define GENERATED_IS_COM_MIXTELEMATICS_CONTEXT_MANAGER_SKELETON_CLASS(k) (G_TYPE_CHECK_CLASS_TYPE ((k), GENERATED_TYPE_COM_MIXTELEMATICS_CONTEXT_MANAGER_SKELETON))

typedef struct _generatedComMixtelematicsContextManagerSkeleton generatedComMixtelematicsContextManagerSkeleton;
typedef struct _generatedComMixtelematicsContextManagerSkeletonClass generatedComMixtelematicsContextManagerSkeletonClass;
typedef struct _generatedComMixtelematicsContextManagerSkeletonPrivate generatedComMixtelematicsContextManagerSkeletonPrivate;

struct _generatedComMixtelematicsContextManagerSkeleton
{
  /*< private >*/
  GDBusInterfaceSkeleton parent_instance;
  generatedComMixtelematicsContextManagerSkeletonPrivate *priv;
};

struct _generatedComMixtelematicsContextManagerSkeletonClass
{
  GDBusInterfaceSkeletonClass parent_class;
};

GType generated_com_mixtelematics_context_manager_skeleton_get_type (void) G_GNUC_CONST;

generatedComMixtelematicsContextManager *generated_com_mixtelematics_context_manager_skeleton_new (void);


G_END_DECLS

#endif /* __DBUS_PROCESS_API_H__ */
